--
&inputepw
  prefix      = 'pb'
  amass(1)    = 207.2
  outdir      = './'
  dvscf_dir   = './save'

  elph        = .true.
  epwwrite    = .false.  ! Restarting
  epwread     = .true.   ! Restarting by reading the pb.epmatwp file
  vme         = 'dipol'

  nbndsub     =  4
  bands_skipped = 'exclude_bands = 1-5'

  wannierize  = .false.  ! Restarting.
  num_iter    = 300
  dis_win_max = 21
  dis_froz_min= -3
  dis_froz_max= 13.5
  proj(1)     = 'Pb:sp3'
  wdata(1) = 'bands_plot = .true.'
  wdata(2) = 'begin kpoint_path'
  wdata(3) = 'G 0.00 0.00 0.00 X 0.00 0.50 0.50'
  wdata(4) = 'X 0.00 0.50 0.50 W 0.25 0.50 0.75'
  wdata(5) = 'W 0.25 0.50 0.75 L 0.50 0.50 0.50'
  wdata(6) = 'L 0.50 0.50 0.50 K 0.375 0.375 0.75'
  wdata(7) = 'K 0.375 0.375 0.75 G 0.00 0.00 0.00'
  wdata(8) = 'G 0.00 0.00 0.00 L 0.50 0.50 0.50'
  wdata(9) = 'end kpoint_path'
  wdata(10)= 'bands_plot_format = gnuplot'

  elecselfen  = .false.
  phonselfen  = .false.
  a2f         = .false.

  fsthick      = 0.4  ! eV - we only need states close to Fermi level
  degaussw     = 0.0  ! eV (adaptative smearing)
  assume_metal = .true.
  ngaussw      = -99  ! we want F-D distribution for metals

  int_mob       = .true.
  iterative_bte = .true.   ! SERTA and iterative BTE
  scattering    = .true.   ! compute scattering rates
  carrier       = .false.  ! This is a metal, we do not specify carrier concentration
  mp_mesh_k     = .true.   ! Use crystal symmetries
  epmatkqread   = .false.  ! Can be used to just perform BTE iterations
  mob_maxiter   = 200      ! Max nb of BTE iterations
  broyden_beta  = 0.7      ! Broyden mixing during iterations
  restart       = .true.   ! Activate possible restart
  restart_step  = 50       ! Write restart points every 50 q-points
  selecqread    = .false.
  nstemp        = 9        ! compute conductivity at 9 temperatures
  temps         = 100 500

  nkf1        = 30
  nkf2        = 30
  nkf3        = 30

  nqf1        = 30
  nqf2        = 30
  nqf3        = 30

  nk1         = 3
  nk2         = 3
  nk3         = 3

  nq1         = 3
  nq2         = 3
  nq3         = 3
 /
